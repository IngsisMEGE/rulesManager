import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'org.jetbrains.kotlin.jvm' version '1.9.23'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.23'
	id "org.jlleitschuh.gradle.ktlint" version "12.1.0"
    id "de.undercouch.download" version "5.3.0"
}

group = 'rulesManager'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.postgresql:postgresql:42.3.1'
    implementation("com.newrelic.agent.java:newrelic-agent:7.2.0")
	implementation 'io.github.cdimascio:dotenv-kotlin:6.4.1'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	testImplementation("com.h2database:h2")
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs += '-Xjsr305=strict'
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
tasks.register('setupNewrelic', Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic/newrelic-java.zip')
    doLast {
        copy {
            from zipTree(file('newrelic/newrelic-java.zip'))
            into rootDir
        }
    }
}